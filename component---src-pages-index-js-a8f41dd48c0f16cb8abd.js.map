{"version":3,"sources":["webpack:///./src/components/BigBoxLink.js","webpack:///./src/components/WorkCard.js","webpack:///./src/components/WorksMasonry.js","webpack:///./src/pages/index.js"],"names":["BigBoxLink","props","href","sx","backgroundColor","color","py","fontSize","fontWeight","name","WorkCard","title","leadIn","image","useState","isShown","setIsShown","onMouseEnter","onMouseLeave","textDecoration","ratio","src","minHeight","height","overflow","paddingX","textOverflow","display","maxHeight","mt","WorksMasonry","data","useStaticQuery","console","log","generatedCards","allMdx","edges","map","n","index","node","fm","frontmatter","slug","thumb","columns","IndexPage","Head","bg","p","mb","gap","textAlign"],"mappings":"mJAoBeA,EAlBI,SAACC,GAChB,OACI,kBAAC,IAAD,CAAMC,KAAMD,EAAMC,KAClBC,GAAI,CACFC,gBAAgB,UAChBC,MAAM,aACNC,GAAG,EACHC,SAAS,CAAC,EAAE,GACZC,WAAW,UACX,SAAS,CACPH,MAAM,aACND,gBAAgB,eAGtBH,EAAMQ,O,oCC6BGC,EA1CE,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAOT,EAA0B,EAA1BA,KAAMU,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAAY,EACrBC,oBAAS,GAAhCC,EAD4C,KACnCC,EADmC,KAGnD,OACE,kBAAC,IAAD,CACEd,KAAMA,EACNe,aAAc,kBAAMD,GAAW,IAC/BE,aAAc,kBAAMF,GAAW,IAC/Bb,GAAI,CACFgB,eAAe,oBAGjB,kBAAC,IAAD,CACEC,MAAO,IACPC,IAAKR,EACLV,GAAI,CACFmB,UAAU,SAGd,kBAAC,IAAD,CACEnB,GAAI,CACFI,SAAU,CAAC,EAAE,GACbC,WAAY,UACZc,UAAW,EACXC,OAAQ,OACRC,SAAU,SACVC,SAAU,EACVC,aAAc,WACd,qBAAsB,IACtBC,QAAS,cACT,qBAAsB,WACtBC,UAAU,SAGZC,GAAG,KAEFd,EAAUH,EAASD,KCwBbmB,EAtDM,WACnB,IAAMC,EAAOC,yBAAe,cAkB5BC,QAAQC,IAAIH,GACZ,IACMI,EADEJ,EAAKK,OAAOC,MACKC,KAAI,SAACC,EAAEC,GAC9B,IAAMC,EAAOF,EAAEE,KACTC,EAAKD,EAAKE,YAChB,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CACEzC,KAAI,SAAWuC,EAAKG,KACpBjC,MAAO+B,EAAG/B,MACVC,OAAQ8B,EAAG9B,OACXC,MAAO6B,EAAGG,YAqBlB,OAAO,kBAAC,IAAD,CAAMC,QAAS,CAAC,IAAKX,ICffY,UApCG,kBAChB,kBAAC,IAAD,KACE,kBAACC,EAAA,EAAD,CAAMrC,MAAM,0CACZ,kBAAC,IAAD,CAAKsC,GAAG,YAAY5C,MAAM,aAAc6C,EAAG,CAAC,EAAE,GAAIC,GAAI,GACpD,kBAAC,IAAD,CAAShD,GAAI,CAACI,SAAS,CAAC,EAAE,KAA1B,wBACA,kBAAC,IAAD,CAAMJ,GAAI,CAACI,SAAS,IAApB,qLAEF,kBAAC,IAAD,CACA6C,IAAK,EACLN,QAAS,CAAC,EAAG,WAAY3C,GAAI,CAACkD,UAAU,UAAWF,GAAI,GAOrD,kBAAC,EAAD,CAAYjD,KAAK,0BAA0BO,KAAK,UAChD,kBAAC,EAAD,CAAYP,KAAK,8BAA8BO,KAAK,SAEtD,kBAAC,IAAD,CAAK0C,GAAI,GACT,kBAAC,EAAD","file":"component---src-pages-index-js-a8f41dd48c0f16cb8abd.js","sourcesContent":["import React from 'react';\nimport {Link} from \"theme-ui\"\nconst BigBoxLink = (props) => {\n    return (\n        <Link href={props.href}\n        sx={{\n          backgroundColor:\"primary\",\n          color:\"background\",\n          py:2,\n          fontSize:[3,4],\n          fontWeight:\"heading\",\n          \":hover\":{\n            color:\"background\",\n            backgroundColor:\"secondary\"\n          }\n        }}\n    >{props.name}</Link>\n    );\n}\n\nexport default BigBoxLink;\n","import React, { useState } from \"react\"\nimport { Box, AspectImage, Text, Link } from \"theme-ui\"\n\nconst WorkCard = ({ title, href, leadIn, image }) => {\n  const [isShown, setIsShown] = useState(false)\n\n  return (\n    <Link\n      href={href}\n      onMouseEnter={() => setIsShown(true)}\n      onMouseLeave={() => setIsShown(false)}\n      sx={{\n        textDecoration:\"none !important\"\n      }}\n    >\n      <AspectImage\n        ratio={32 / 20}\n        src={image}\n        sx={{\n          minHeight:\"0px\"\n        }}\n      />\n      <Text\n        sx={{\n          fontSize: [2,3],\n          fontWeight: \"heading\",\n          minHeight: 0,\n          height: \"75px\",\n          overflow: \"hidden\",\n          paddingX: 1,\n          textOverflow: \"ellipsis\",\n          \"-webkit-line-clamp\": \"2\",\n          display: \"-webkit-box\",\n          \"-webkit-box-orient\": \"vertical\",\n          maxHeight:\"2.8em\",\n          \n        }}\n        mt=\"2\"\n      >\n        {isShown ? leadIn : title}\n      </Text>\n    </Link>\n  )\n}\n\nexport default WorkCard\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Box, Grid } from \"theme-ui\"\nimport WorkCard from \"./WorkCard\"\nconst chunk = (arr, size) =>\n  Array.from({ length: Math.ceil(arr.length / size) }, (v, i) =>\n    arr.slice(i * size, i * size + size)\n  )\n\nconst WorksMasonry = () => {\n  const data = useStaticQuery(graphql`\n      query worksQuery {\n        allMdx(sort: {fields: frontmatter___year, order: DESC}) {\n          edges {\n            node {\n              slug\n              frontmatter {\n                leadIn\n                thumb\n                title\n                year\n              }\n            }\n          }\n          totalCount\n        }\n      }\n  `)\n  console.log(data)\n  let d = data.allMdx.edges\n  const generatedCards = d.map((n,index)=>{\n    const node = n.node;\n    const fm = node.frontmatter\n    return (\n      <Box>\n        <WorkCard\n          href={`/work/${node.slug}`}\n          title={fm.title}\n          leadIn={fm.leadIn}\n          image={fm.thumb}\n        ></WorkCard>\n      </Box>\n    )\n  })\n\n    /* <Box\n        sx={{\n          display: \"grid\",\n          gridTemplateColumns: [\"1fr 1fr\",\"1fr 1fr\",\"2.7fr 1fr\"],\n          gridTemplateRows: [\"1fr 0.5fr\",\"1fr 1fr\"],\n          gridTemplateAreas: [\"'main main' 'sidetop sidebottom'\",\"'main sidetop' 'sidebottom .'\",\"'main sidetop' 'main sidebottom'\"],\n          gap: 3,\n\n          mb: 3,\n        }}\n      >\n        {generatedCards}\n      </Box> */\n\n\n  return <Grid columns={[2]}>{generatedCards}</Grid>\n}\n\nexport default WorksMasonry\n","import React from \"react\"\nimport{Flex, NavLink, Heading,Box, Text, Grid, Button, Link, Card} from \"theme-ui\"\nimport Layout from \"../components/layout\"\nimport BigBoxLink from \"../components/BigBoxLink\"\nimport { Helmet } from 'react-helmet'\nimport Head from \"../components/Head\"\nimport WorksMasonry from \"../components/WorksMasonry\"\nimport {graphql} from \"gatsby\"\nimport WorkCard from \"../components/WorkCard\"\nconst IndexPage = () => (\n  <Layout>\n    <Head title=\"Collective Fullstack - Web Developers\"></Head>\n    <Box bg='secondary' color=\"background\"  p={[3,4]} mb={3}>\n      <Heading sx={{fontSize:[6,7]}}>Collective Fullstack</Heading>\n      <Text sx={{fontSize:3}}>We are a small two person freelance company who specialize in web development. Previous work includes building everything from environmental monitoring systems to chat clients.</Text>\n    </Box>\n    <Grid\n    gap={3}\n    columns={[2, '1fr 1fr']} sx={{textAlign:\"center\"}} mb={3}>\n      {/* <Link href=\"https://github.com/ehne\" sx={{py:3,\n          fontSize:[3,4],\n          fontWeight:\"heading\",}}>Darcy</Link>\n      <Link href=\"https://github.com/midataur\" sx={{py:3,\n          fontSize:[3,4],\n          fontWeight:\"heading\",}}>Max</Link>  */}  \n      <BigBoxLink href=\"https://github.com/ehne\" name=\"Darcy\"></BigBoxLink>\n      <BigBoxLink href=\"https://github.com/midataur\" name=\"Max\"></BigBoxLink>\n    </Grid>\n    <Box mb={3}>\n    <WorksMasonry></WorksMasonry>\n    </Box>\n    \n    {/* <Grid gap={3}\n    columns={[1,2,3]}>\n        {\n          data.allFile.nodes.map((post,i)=>\n            <Box>{post.childMdx.slug}</Box>\n          )\n        }\n    </Grid> */}\n\n    \n  </Layout>\n)\n\nexport default IndexPage\n"],"sourceRoot":""}